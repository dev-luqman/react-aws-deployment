name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      # - name: Run tests
      #   run: npm test

      # - name: Pre-Deployment Curl
      #   run: |
      #     curl -X GET http://localhost:3000/test-endpoint

      - name: Build React app
        run: npm run build

      - name: Delete existing files on EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-59-251-73.us-east-2.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /var/www/*

      # - name: Create target directory on EC2 instance
      #   uses:  appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ec2-3-145-35-131.us-east-2.compute.amazonaws.com
      #     username: ubuntu
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo mkdir -p /var/www/

      - name: Copy files to EC2 instance
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ec2-13-59-251-73.us-east-2.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}

          # The source path should be modified based on your React application's build output directory
          source: build
          target: /var/www/


      - name: SSH into EC2 instance and restart web server
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-59-251-73.us-east-2.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}  # Store the PEM file contents as a secret named 'EC2_SSH_KEY'

          # Set environment variables before running the application
          # env:
          #   REACT_APP_VERSION: "1"
          #   INCREMENTAL_VAR: ${{ steps.increment.outputs.count }}

          # The commands below can be modified based on your specific web server and configuration
          script: |
            sudo service nginx stop
            sudo service nginx start

      - name: Increment Variable
        id: increment
        run: |
          echo "::set-output name=count::$(( ${{ github.run_number }} + 1 ))"

      - name: Send Slack Notification - Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: 'success'
          message: 'Deployment to AWS EC2 is complete!'
          mention: 'channel' # Optional - mention specific channel or user
          fields: |
            [
              {
                "title": "Deployment Summary",
                "value": "Count: ${{ steps.increment.outputs.count }} | Branch: ${{ github.ref }} | Commit Message: ${{ github.event.head_commit.message }}"
              }
            ]

      - name: Send Slack Notification - Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: 'failure'
          message: 'Deployment to AWS EC2 has failed!'
          mention: '@lukman balogun' # Optional - mention specific channel or user
          fields: |
            [
              {
                "title": "Deployment Summary",
                "value": "Count: ${{ steps.increment.outputs.count }} | Branch: ${{ github.ref }} | Commit Message: ${{ github.event.head_commit.message }}"
              }
            ]
